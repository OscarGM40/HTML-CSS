* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --fondo: #09024b;
}

body::before {
  display: block;
  height: 45px;
  content: "";
  background: rgb(139, 83, 83);
}

.container {
  padding: 10px;
  height: 800px;
  width: 1000px;
  background: var(--fondo);
  margin: 0 auto;
  display: grid;
  /* minmax(min max) recibe dos args,minimo y maximo */
  /* grid-template-columns: repeat(3, minmax(100px, 300px)); */
  /* auto-fill llena el contenedor con el valor que le diga,puede ser un minmax para máxima potencialidad */
  grid-template-columns: repeat(auto-fill, minmax(200px, 220px));
  grid-template-rows: repeat(auto-fill, 300px);
  /* auto-fit ajusta el contenedor */
  grid-auto-flow: row dense;
  gap: 10px 10px;
  /* justify o align-content alinea el GridContainer en si mismo.Su uso es básico */
  justify-content: center;
  align-content: center;
  /* cambiar justify-items o align-items,que por defecto estan en stretch cambiará la GridCell a max-content,reduciendo su ancho o alto segun propiedad */
  justify-items: stretch;
  align-items: stretch;
}

[class^="item"] {
  border: 5px solid gray;
  border-radius: 10px;
  font-size: 35px;
  background: rgb(139, 83, 83);
  display: grid;
  align-items: center;
  justify-content: center;
}

.item:nth-of-type(1) {
 order:2;
 justify-self: end;
 align-self: start;
}
.item:nth-of-type(2) {
    order:3;
    justify-self: center;
    align-self: start;
}
.item:nth-of-type(3) {
    order:1;
}
.item:nth-of-type(4) {
    order:-1;
}

@media screen and (max-width: 1000px){
    .container {
        width: 800px;
    }
}

@media screen and (max-width: 750px){
    .container {
        width: 600px;
    }
}